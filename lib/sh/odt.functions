
# --------------------------------------------------------------------------- #
  function writeTeXsrc() { echo "$1" >> $TMPTEX ; }
# --------------------------------------------------------------------------- #

# MAIN MDSH FUNCTION
# --------------------------------------------------------------------------- #
  function mdsh2TeX() {
# --------------------------------------------------------------------------- #
# INCLUDE FUNCTIONS
# --------------------------------------------------------------------------- #
  source $FUNCTIONS

# --------------------------------------------------------------------------- #
  IFHTTP=`echo $1 | grep "http.\?://" | wc -l`
  if [ $IFHTTP -ge 1 ]; then
   URL=$1
   NAME=`echo $1 | md5sum | cut -c 1-10`
   wget --no-check-certificate -O ${TMPDIR}/${NAME}.mdsh $URL > /dev/null 2>&1
   MDSH=${TMPDIR}/${NAME}.mdsh
  else 
   MDSH=$1
  fi

  MDSHMOD=$TMPDIR/tmp-`echo $MDSH | md5sum | cut -c 1-8`.mdsh
# --------------------------------------------------------------------------- #
# - CONVERT MDSH TO HTML 
# - ...
# --------------------------------------------------------------------------- #

  cat $MDSH                              | # USELESS USE OF CAT
  sed 's/^%/zDf7WV362LoP/g'              | # SAVE COMMENTS FROM PANDOC
  sed 's/_\[/_ \[/g'                     | # MAKE PANDOC RECOGNIZE EMPH(?)
  sed 's/]{_/]{ _/g'                     | # MAKE PANDOC RECOGNIZE EMPH(?)
  sed '/zDf7WV362LoP/s/$/    /g'         | # FORCE NEWLINE (MD)
  sed '/zDf7WV362LoP/s/"/hFg76VCdJueW/g' | # SAVE FROM PANDOC IF START %
  sed '/zDf7WV362LoP/s/ /c8SJu53LDCNN/g' | # SAVE FROM PANDOC
  sed '/zDf7WV362LoP/s/\\/SlasH328d1G/g' | # SAVE FROM PANDOC
  sed '/zDf7WV362LoP/s/_/Und3rsfd7cdX/g' | # SAVE FROM PANDOC
  sed '/zDf7WV362LoP/s/-/emD4sH83Cd7z/g' | # SAVE FROM PANDOC
  sed '/zDf7WV362LoP/s/|/34RtP1P34fcg/g' | # SAVE FROM PANDOC
  sed 's/\[^\]{/jWu37CDe73EDc/g'         | # SAVE FOOTNOTES FROM PANDOC
  sed 's/\[@\[/\nhFzdu74DsdCWd34/g'      | # SAVE CITEP OPEN FROM PANDOC
  sed 's/\[@/\nhFzdu74DsdCW28C/g'        | # SAVE CITE OPEN FROM PANDOC
  sed '/^hFzdu74DsdCWd34/s/\]/hFFc63DxY/'| # SAVE CITE OPTION FROM PANDOC
  sed '/^hFzdu74DsdCW/s/\]/hIe4X3v7s/'   | # SAVE CITE CLOSE FROM PANDOC
  sed 's/}/jfdUr63cdZZd/g'               | # SAVE FROM PANDOC
  sed 's/{/ufBcrKD73Dnc/g'               | # SAVE FROM PANDOC
  sed 's/Open Source/0P3n50urc3/g'       | # SAVE FROM PANDOC
  pandoc -S -r markdown -w latex         | # MD TO LATEX
  sed 's/\\href{/\\url{/g'               | # CONVERT LINKS
  sed 's/hFg76VCdJueW/"/g'               | # BACK TO ORIGINAL
  sed '/zDf7WV362LoP/s/\\//g'            | # REMOVE ESCAPES FROM FUNCTIONS
  sed 's/zDf7WV362LoP/%/g'               | # BACK TO ORIGINAL
  sed '/^%/s/c8SJu53LDCNN/ /g'           | # BACK TO ORIGINAL
  sed '/^%/s/SlasH328d1G/\\/g'           | # BACK TO ORIGINAL
  sed 's/jfdUr63cdZZd/ }/g'              | # BACK TO ORIGINAL
  sed 's/ufBcrKD73Dnc/{/g'               | # BACK TO ORIGINAL
  sed 's/Und3rsfd7cdX/_/g'               | # BACK TO ORIGINAL
  sed 's/emD4sH83Cd7z/-/g'               | # BACK TO ORIGINAL
  sed 's/vGzWeTf18XX//g'                 | # BACK TO ORIGINAL
  sed 's/34RtP1P34fcg/|/g'               | # BACK TO ORIGINAL
  sed 's/0P3n50urc3/Open~Source/g'       | # NO BREAK FOR Open Source
  sed 's/jWu37CDe73EDc/\\footnote{/g'    | # FOOTNOTES
  sed 's/hFzdu74DsdCWd34/\\citep[/g'     | # CITE OPEN
  sed 's/hFzdu74DsdCW28C/\\cite{/g'      | # CITE OPEN
  sed 's/hFFc63DxY/\]{/g'                | # CITE OPTION
  sed 's/hIe4X3v7s/}/g'                  | # CITE CLOSE
  sed -e :a \
      -e '$!N;s/\n\\cite/\\cite/;ta' \
      -e 'P;D'                           | # APPEND IF STARTS WITH \cite
  sed -e :a \
      -e '$!N;s/\n\\footn/\\footn/;ta' \
      -e 'P;D'                           | # APPEND IF STARTS WITH \footn
  sed -e :a \
      -e '$!N;s/\n\\euro/\\euro/;ta' \
      -e 'P;D'                           | # APPEND IF STARTS WITH \euro
  sed "s/^ *$/$EMPTYLINE/g"              | # PLACEHOLDER FOR EMPTY LINES
  sed -e 's/^% TITLE:/%TXIXTXLXE/g' \
      -e '/^%TXIXTXLXE/s/ /_/g' \
      -e 's/%TXIXTXLXE/% TITLE:/g'       | # REMOVE SPACES FROM TITLE
  sed -e 's/^% HIDDENTITLE:/%HXIXTXLXE/g' \
      -e '/^%HXIXTXLXE/s/ /_/g' \
      -e 's/%HXIXTXLXE/% HIDDENTITLE:/g' | # REMOVE SPACES FROM HIDDENTITLE
  sed -e 's/^% HIDDENKEYWORDS:/%HXIXDX/g' \
      -e '/^%HXIXDX/s/ /_/g' \
      -e 's/%HXIXDX/% HIDDENKEYWORDS:/g' | # REMOVE SPACES FROM HIDDENKEYWORDS
  sed -e 's/^% LABEL:/%LXAXBXEXL/g' \
      -e '/^%LXAXBXEXL/s/ /_/g' \
      -e 's/%LXAXBXEXL/% LABEL:/g'       | # REMOVE SPACES FROM LABEL
  sed -e 's/^% MEANWHILE:/%MX34NXW1/g' \
      -e '/^%MX34NXW1/s/ /_/g' \
      -e 's/%MX34NXW1/% MEANWHILE:/g'    | # REMOVE SPACES FROM MEANWHILE
  sed -e 's/^% INLINE:/%1N71N3/g' \
      -e '/^%1N71N3/s/ /_/g' \
      -e 's/%1N71N3/% INLINE:/g'         | # REMOVE SPACES FROM INLINE
  sed 's/\\\\/ \n&/g'                    | # MOVE NEWLINE ON NEW LINE
  sed    's/\.\.\./\\ldots{}/g'          | # 3 DOTS TO MACRO
  sed -e :a \
      -e '$!N;s/\n\\ldots/XX\\ldots/;ta' \
      -e 'P;D'                           | # APPEND IF STARTS WITH \ldot
  sed '/^%/s/XX\\ldots/\nXX\\ldots/g'    | # CORRECT IF WRONGLY APPENDED
  sed 's/XX\\ldots/\\ldots/g'            | # CORRECT IF WRONGLY APPENDED
  tee > $MDSHMOD                           # WRITE TO FILE




# cp $MDSHMOD debug.1

# --------------------------------------------------------------------------- #
# PARSE COMMANDS 
# --------------------------------------------------------------------------- #

  for LINE in `cat $MDSHMOD | sed 's, ,DieW73NaS03J,g'`
   do 
      # --------------------------------------------------- # 
      # RESTORE SPACES
        LINE=`echo $LINE | sed 's,DieW73NaS03J, ,g'`
      # --------------------------------------------------- #  
      # CHECK IF LINE STARTS WITH A %
        ISCMD=`echo $LINE | grep ^% | wc -l` 
      # --------------------------------------------------- # 
      # IF LINE STARTS WITH A %
        if [ $ISCMD -ge 1 ]; then
 
           CMD=`echo $LINE | \
                cut -d "%" -f 2 | \
                cut -d ":" -f 1 | \
                sed 's/\[/ /g' | sed 's/\]/ /g' |\
                sed 's, ,,g'`
           ARG=`echo $LINE | cut -d ":" -f 2-`
      # --------------------------------------------------- # 
      # CHECK IF COMMAND EXISTS

           CMDEXISTS=`grep "^function ${CMD}()" $FUNCTIONS |\
                      wc -l`
      # --------------------------------------------------- # 
      # IF COMMAND EXISTS 
        if [ $CMDEXISTS -ge 1 ]; then
           # EXECUTE COMMAND
             $CMD $ARG
        fi
      # --------------------------------------------------- # 
      # IF LINE DOES NOT START WITH % (= SIMPLE MARKDOWN)
        else
      # --------------------------------------------------- # 
      # APPEND LINE TO TEX FILE
        echo "$LINE" >> $TEXBODY
        fi
      # --------------------------------------------------- # 
  done

# cp $TEXBODY debug.2


  }
# --------------------------------------------------------------------------- #

function NOWSPEAKING() {

 # ID=`echo $1 | tr [:upper:] [:lower:]`
   ID=`echo $1`

   writeTeXsrc ""

   if [ ${ID}X != XX ]; then

   writeTeXsrc "\textbf{${ID}:} "

   fi
}

# --------------------------------------------------------------------------- #

function TITLE() {

  # NOT WORKING FOR NESTED DOCUMENTS
  # TITLE=`grep "^% TITLE:" $MDSHMOD |  tail -1 | \
  #        cut -d ":" -f 2- | sed "s/^[ \t]*//" | sed "s/[ \t]*$//"`


  TITLE=`echo $1 | sed 's/_/ /g' | sed "s/^[ \t]*//" | sed "s/[ \t]*$//"`

  writeTeXsrc "\section{$TITLE}"

}

# --------------------------------------------------------------------------- #
